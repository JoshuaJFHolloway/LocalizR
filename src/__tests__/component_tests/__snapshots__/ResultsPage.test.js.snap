// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResultsPage Rendering components renders correcrly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResultsPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <styled.text>
                <SubHeader
                        subHeader="Your score is undefined"
                />
                <p
                        id="outputMessage"
                >
                        Perfect score! How many times have you played this scenario?!
                </p>
                <SubmitButton
                        buttonName="Try another quiz"
                        handleDataSubmitted={undefined}
                />
                <SubmitButton
                        buttonName="See your results"
                        handleDataSubmitted={undefined}
                />
        </styled.text>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <styled.text>
          <SubHeader
                    subHeader="Your score is undefined"
          />
          <p
                    id="outputMessage"
          >
                    Perfect score! How many times have you played this scenario?!
          </p>
          <SubmitButton
                    buttonName="Try another quiz"
                    handleDataSubmitted={undefined}
          />
          <SubmitButton
                    buttonName="See your results"
                    handleDataSubmitted={undefined}
          />
</styled.text>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <SubHeader
              subHeader="Your score is undefined"
/>,
            <p
              id="outputMessage"
>
              Perfect score! How many times have you played this scenario?!
</p>,
            <SubmitButton
              buttonName="Try another quiz"
              handleDataSubmitted={undefined}
/>,
            <SubmitButton
              buttonName="See your results"
              handleDataSubmitted={undefined}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "subHeader": "Your score is undefined",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Perfect score! How many times have you played this scenario?!",
              "id": "outputMessage",
            },
            "ref": null,
            "rendered": "Perfect score! How many times have you played this scenario?!",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "buttonName": "Try another quiz",
              "handleDataSubmitted": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "buttonName": "See your results",
              "handleDataSubmitted": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <styled.text>
                    <SubHeader
                              subHeader="Your score is undefined"
                    />
                    <p
                              id="outputMessage"
                    >
                              Perfect score! How many times have you played this scenario?!
                    </p>
                    <SubmitButton
                              buttonName="Try another quiz"
                              handleDataSubmitted={undefined}
                    />
                    <SubmitButton
                              buttonName="See your results"
                              handleDataSubmitted={undefined}
                    />
          </styled.text>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <styled.text>
            <SubHeader
                        subHeader="Your score is undefined"
            />
            <p
                        id="outputMessage"
            >
                        Perfect score! How many times have you played this scenario?!
            </p>
            <SubmitButton
                        buttonName="Try another quiz"
                        handleDataSubmitted={undefined}
            />
            <SubmitButton
                        buttonName="See your results"
                        handleDataSubmitted={undefined}
            />
</styled.text>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SubHeader
                subHeader="Your score is undefined"
/>,
              <p
                id="outputMessage"
>
                Perfect score! How many times have you played this scenario?!
</p>,
              <SubmitButton
                buttonName="Try another quiz"
                handleDataSubmitted={undefined}
/>,
              <SubmitButton
                buttonName="See your results"
                handleDataSubmitted={undefined}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "subHeader": "Your score is undefined",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Perfect score! How many times have you played this scenario?!",
                "id": "outputMessage",
              },
              "ref": null,
              "rendered": "Perfect score! How many times have you played this scenario?!",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "buttonName": "Try another quiz",
                "handleDataSubmitted": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "buttonName": "See your results",
                "handleDataSubmitted": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
